// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int                      @id @default(autoincrement())
  username      String                   @unique
  password_hash String
  messages      Message[]
  groupChats    GroupChatParticipant[]
  privateChats  PrivateChatParticipant[]
  createdAt     DateTime                 @default(now())
  updatedAt     DateTime                 @updatedAt
}

model PrivateChat {
  id           String                   @id @default(uuid())
  messages     Message[]
  participants PrivateChatParticipant[]
  createdAt    DateTime                 @default(now())
  updatedAt    DateTime                 @updatedAt
}

model PrivateChatParticipant {
  id            String      @id @default(uuid())
  privateChatId String
  userId        Int
  user          User        @relation(fields: [userId], references: [id])
  privateChat   PrivateChat @relation(fields: [privateChatId], references: [id])
}

model GroupChat {
  id           String                 @id @default(uuid())
  name         String
  participants GroupChatParticipant[]
  messages     Message[]
  createdAt    DateTime               @default(now())
  updatedAt    DateTime               @updatedAt
}

model GroupChatParticipant {
  id          String    @id @default(uuid())
  groupChatId String
  userId      Int
  isAdmin     Boolean
  groupChat   GroupChat @relation(fields: [groupChatId], references: [id])
  user        User      @relation(fields: [userId], references: [id])
}

model Message {
  id            String       @id @default(uuid())
  content       String
  senderId      Int
  privateChatId String?
  groupChatId   String?
  sender        User         @relation(fields: [senderId], references: [id])
  PrivateChat   PrivateChat? @relation(fields: [privateChatId], references: [id])
  GroupChat     GroupChat?   @relation(fields: [groupChatId], references: [id])
  createdAt     DateTime     @default(now())
}
